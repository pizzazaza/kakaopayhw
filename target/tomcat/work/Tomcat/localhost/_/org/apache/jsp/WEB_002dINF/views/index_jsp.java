/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2017-09-19 07:08:07 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');
      out.write('\n');
 request.setCharacterEncoding("UTF-8"); 
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"ko\">\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"utf-8\">\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n");
      out.write("    <meta name=\"description\" content=\"\">\n");
      out.write("    <meta name=\"author\" content=\"\">\n");
      out.write("    <title>KakaoPay HW</title>\n");
      out.write("    <link href=\"//maxcdn.bootstrapcdn.com/bootstrap/latest/css/bootstrap.min.css\" rel=\"stylesheet\">\n");
      out.write("    <style type=\"text/css\">\n");
      out.write("        * { font-family: NanumGothic, 'Malgun Gothic'; }\n");
      out.write("        /*\n");
      out.write("         * 스타일 변경\n");
      out.write("         * --------------------------------------------------\n");
      out.write("         */\n");
      out.write("        html, body { overflow-x: hidden; /* 좁은 화면에서 스크롤 방지 */ }\n");
      out.write("        body { padding-top: 70px; }\n");
      out.write("        footer { padding: 30px 0; }\n");
      out.write("\n");
      out.write("        /*\n");
      out.write("         * 오프캔버스\n");
      out.write("         * --------------------------------------------------\n");
      out.write("         */\n");
      out.write("        @media screen and (max-width: 767px) {\n");
      out.write("            .row-offcanvas {\n");
      out.write("                position: relative;\n");
      out.write("                -webkit-transition: all .25s ease-out;\n");
      out.write("                -o-transition: all .25s ease-out;\n");
      out.write("                transition: all .25s ease-out;\n");
      out.write("            }\n");
      out.write("            .row-offcanvas-right { right: 0; }\n");
      out.write("            .row-offcanvas-left { left: 0; }\n");
      out.write("            .row-offcanvas-right\n");
      out.write("            .sidebar-offcanvas { right: -50%; /* 컬럼 6개 */ }\n");
      out.write("            .row-offcanvas-left\n");
      out.write("            .sidebar-offcanvas { left: -50%; /* 컬럼 6개 */ }\n");
      out.write("            .row-offcanvas-right.active { right: 50%; /* 컬럼 6개 */ }\n");
      out.write("            .row-offcanvas-left.active { left: 50%; /* 컬럼 6개 */ }\n");
      out.write("            .sidebar-offcanvas {\n");
      out.write("                position: absolute;\n");
      out.write("                top: 0;\n");
      out.write("                width: 50%; /* 컬럼 6개 */\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("    </style>\n");
      out.write("    <!--\n");
      out.write("    <script src=\"//ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js\"></script>\n");
      out.write("    <script src=\"//maxcdn.bootstrapcdn.com/bootstrap/latest/js/bootstrap.min.js\"></script>\n");
      out.write("    <script>\n");
      out.write("        $(document).ready(function () {\n");
      out.write("            $('[data-toggle=\"offcanvas\"]').click(function () {\n");
      out.write("                $('.row-offcanvas').toggleClass('active')\n");
      out.write("            });\n");
      out.write("        });\n");
      out.write("    </script>\n");
      out.write("    -->\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("\n");
      out.write("<div class=\"container\">\n");
      out.write("    <div class=\"row row-offcanvas row-offcanvas-right\">\n");
      out.write("        <div class=\"col-xs-12 col-sm-9\">\n");
      out.write("            <p class=\"pull-right visible-xs\">\n");
      out.write("                <button type=\"button\" class=\"btn btn-primary btn-xs\" data-toggle=\"offcanvas\">네비게이션 토글 버튼</button>\n");
      out.write("            </p>\n");
      out.write("            <div class=\"jumbotron\">\n");
      out.write("                <h2>파일 서비스를 제공하는<br>\n");
      out.write("                    REST Api 구현하기</h2>\n");
      out.write("                <p>파일 조회/추가/수정/삭제 기능</p>\n");
      out.write("                <form class=\"upload-file\" method=\"post\" action=\"/files\" enctype=\"multipart/form-data\" accept-charset=\"UTF-8\">\n");
      out.write("\n");
      out.write("                    Comment   : <input id=\"comment\" type=\"text\" name=\"comment\"/><br>\n");
      out.write("                    <input id=\"post_file\" type=\"file\" name=\"file\"/><br>\n");
      out.write("                    <input id=\"submit_but\" type=\"submit\" value=\"등록\"/>\n");
      out.write("                </form>\n");
      out.write("\n");
      out.write("            </div>\n");
      out.write("            <div class=\"row\">\n");
      out.write("                ");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("            </div><!--/row-->\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("    </div><!--/row-->\n");
      out.write("\n");
      out.write("    <hr>\n");
      out.write("    <footer>\n");
      out.write("        <p>Kakao Pay 면접과제 2017</p>\n");
      out.write("    </footer>\n");
      out.write("</div><!--/.container-->\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("<script src=\"/resources/js/node_modules/jquery/dist/jquery.min.js\"></script>\n");
      out.write("<script src=\"/resources/js/node_modules/handlebars/dist/handlebars.min.js\"></script>\n");
      out.write("<script src=\"/resources/js/node_modules/egjs/dist//pkgd/eg.pkgd.min.js\"></script>\n");
      out.write("<script src=\"/resources/js/app.js\"></script>\n");
      out.write("\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fforEach_005f0.setParent(null);
    // /WEB-INF/views/index.jsp(92,16) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f0.setVar("file");
    // /WEB-INF/views/index.jsp(92,16) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/index.jsp(92,16) '${fileList}'",_el_expressionfactory.createValueExpression(_jspx_page_context.getELContext(),"${fileList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
    int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
    try {
      int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
      if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("                    <div class=\"col-6 col-sm-6 col-lg-4\" data-file-info=");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${file.fileId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
          out.write(">\n");
          out.write("                        <h3>");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${file.fileName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
          out.write("</h3>\n");
          out.write("                        <p>");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${file.comment}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
          out.write("</p>\n");
          out.write("                        <p><a class=\"btn btn-default btn-download\" href=\"#\" role=\"button\">다운로드</a></p>\n");
          out.write("                        <p><a class=\"btn btn-default btn-modify\" href=\"#\" role=\"button\">삭제</a></p>\n");
          out.write("\n");
          out.write("                        <form class=\"modify-file\" method=\"post\" action=\"/files/");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${file.fileId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
          out.write("\" enctype=\"multipart/form-data\" accept-charset=\"UTF-8\">\n");
          out.write("                            <input type=\"hidden\" name=\"_method\" value=\"PUT\"/>\n");
          out.write("                            Comment   : <input id=\"comment-m\" type=\"text\" name=\"comment\"/><br>\n");
          out.write("                            <input id=\"put-file-m\" type=\"file\" name=\"file\"/><br>\n");
          out.write("                            <input id=\"submit_but-m\" type=\"submit\" value=\"수정\"/>\n");
          out.write("                        </form>\n");
          out.write("                    </div>\n");
          out.write("                ");
          int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
    } finally {
      _jspx_th_c_005fforEach_005f0.doFinally();
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
    }
    return false;
  }
}
